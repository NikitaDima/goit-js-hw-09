{"mappings":"AAAgBA,SAASC,cAAc,kBACxBD,SAASC,cAAc,eACrBD,SAASC,cAAc,mBACjBD,SAASC,cAAc,SAE/BC,iBAAiB,UAEhC,SAAuBC,GAErB,OADAA,EAAEC,iBACK,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MACEC,UAAUC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,IACvBR,EAAES,cACN,IAAIC,EAAQC,OAAOL,EAAMM,OACzB,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3BH,GAASC,OAAOJ,EAAKK,OACrB,MAAME,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFX,EAAQ,uBAAqBU,QAAUH,OAErCN,EAAK,sBAAoBS,QAAQH,MAAU,GAE9CA,E","sources":["src/js/03-promises.js"],"sourcesContent":["const delayEl = document.querySelector('[name = delay]');\nconst stepEl = document.querySelector('[name=step]');\nconst amountEl = document.querySelector('[name = amount]');\nconst createPromisEl = document.querySelector('.form');\n\ncreatePromisEl.addEventListener('submit', createPromise);\n\nfunction createPromise(e) {\n  e.preventDefault();\n  return new Promise((resolve, reject) => {\n    const {\n      elements: { delay, step, amount },\n    } = e.currentTarget;\n    let DELAY = Number(delay.value);\n    for (let i = 0; i >= 5; i++) {\n      DELAY += Number(step.value);\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(`✅ Fulfilled promise ${i} in ${DELAY}ms`);\n        } else {\n          reject(`❌ Rejected promise ${i} in ${DELAY}ms`);\n        }\n      }, DELAY);\n    }\n  });\n}\n"],"names":["document","querySelector","addEventListener","e","preventDefault","Promise","resolve","reject","elements","delay","step","amount","currentTarget","DELAY","Number","value","i","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.6667332e.js.map"}