{"mappings":"YAAgBA,SAASC,cAAc,kBACxBD,SAASC,cAAc,eACrBD,SAASC,cAAc,mBACjBD,SAASC,cAAc,SAE/BC,iBAAiB,UAEhC,SAAuBC,GAErB,OADAA,EAAEC,iBACK,IAAIC,SAAQ,SAACC,EAASC,GAK3B,I,kBACEC,GAASC,OAAOC,EAAKC,OACrB,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFN,EAAQ,uBAAiCU,OAARC,EAAE,QAAYD,OAANR,EAAM,OAE7CD,EAAK,sBAA8BS,OAARC,EAAE,QAAYD,OAANR,EAAM,M,GAE5CA,E,EAXcU,EAAff,EAAEgB,cADJC,SAAYC,EAAKH,EAALG,MAAOX,EAAIQ,EAAJR,KAEjBF,GAF6BU,EAANI,OAEfb,OAAOY,EAAMV,QAChBY,EAAI,EAAGA,GAAK,EAAGA,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["const delayEl = document.querySelector('[name = delay]');\nconst stepEl = document.querySelector('[name=step]');\nconst amountEl = document.querySelector('[name = amount]');\nconst createPromisEl = document.querySelector('.form');\n\ncreatePromisEl.addEventListener('submit', createPromise);\n\nfunction createPromise(e) {\n  e.preventDefault();\n  return new Promise((resolve, reject) => {\n    const {\n      elements: { delay, step, amount },\n    } = e.currentTarget;\n    let DELAY = Number(delay.value);\n    for (let i = 0; i >= 5; i++) {\n      DELAY += Number(step.value);\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(`✅ Fulfilled promise ${i} in ${DELAY}ms`);\n        } else {\n          reject(`❌ Rejected promise ${i} in ${DELAY}ms`);\n        }\n      }, DELAY);\n    }\n  });\n}\n"],"names":["document","querySelector","addEventListener","e","preventDefault","Promise","resolve","reject","DELAY","Number","step","value","shouldResolve","Math","random","setTimeout","concat","i","_elements","currentTarget","elements","delay","amount","i1","_loop"],"version":3,"file":"03-promises.8cbce266.js.map"}